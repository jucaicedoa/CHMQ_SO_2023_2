package chmaquina20232;

/**
 * @author: jucaicedoa - Sistemas Operativos 2023-2
 */
import java.awt.Color;
import java.io.File;
import java.io.FileNotFoundException;
import java.util.Scanner;
import javax.swing.JFileChooser;
import javax.swing.table.DefaultTableModel;
import javax.swing.JOptionPane;
public class principal extends javax.swing.JFrame {

    Scanner entrada = null;
    JFileChooser fileChooser = new JFileChooser();
    int valorSpinnerKernel;
    int valorSpinner;
    
    public principal() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelPrincipal = new javax.swing.JPanel();
        jPanelMaquina = new javax.swing.JPanel();
        jLabelAcumulador = new javax.swing.JLabel();
        jTextFieldAcumulador = new javax.swing.JTextField();
        jLabelMemoria = new javax.swing.JLabel();
        jSpinnerMemoria = new javax.swing.JSpinner();
        jLabelKernel = new javax.swing.JLabel();
        jSpinnerKernel = new javax.swing.JSpinner();
        jTextFieldProgramaActual = new javax.swing.JTextField();
        jLabelPrograma = new javax.swing.JLabel();
        jLabelModo = new javax.swing.JLabel();
        jTextFieldModo = new javax.swing.JTextField();
        jPanelMonitor = new javax.swing.JPanel();
        jLabelMonitor = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextAreaMonitor = new javax.swing.JTextArea();
        jPanelimpresora = new javax.swing.JPanel();
        jLabelImpresora = new javax.swing.JLabel();
        jScrollPaneImpresora = new javax.swing.JScrollPane();
        jTextAreaImpresora = new javax.swing.JTextArea();
        jButtonEncender = new javax.swing.JButton();
        jButtonApagar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableMemoria = new javax.swing.JTable();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenuArchivo = new javax.swing.JMenu();
        jMenuItemAbrir = new javax.swing.JMenuItem();
        jMenuSalir = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("CHMAQUINA");
        setBackground(new java.awt.Color(255, 102, 102));
        setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        setLocationByPlatform(true);
        setMaximumSize(new java.awt.Dimension(1100, 600));
        setName("Fondo"); // NOI18N
        setResizable(false);

        jPanelPrincipal.setBackground(new java.awt.Color(102, 224, 175));
        jPanelPrincipal.setPreferredSize(new java.awt.Dimension(1200, 659));

        jPanelMaquina.setBackground(new java.awt.Color(17, 187, 152));
        jPanelMaquina.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabelAcumulador.setText("Acumulador");

        jTextFieldAcumulador.setEditable(false);
        jTextFieldAcumulador.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabelMemoria.setText("Memoria");

        jSpinnerMemoria.setModel(new javax.swing.SpinnerNumberModel(140, null, 9100, 1));
        jSpinnerMemoria.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jSpinnerMemoria.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinnerMemoriaStateChanged(evt);
            }
        });

        jLabelKernel.setText("Kernel");

        jSpinnerKernel.setModel(new javax.swing.SpinnerNumberModel(99, null, 9059, 1));
        jSpinnerKernel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jSpinnerKernel.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinnerKernelStateChanged(evt);
            }
        });

        jTextFieldProgramaActual.setEditable(false);
        jTextFieldProgramaActual.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabelPrograma.setText("Programa");

        jLabelModo.setText("Modo");

        jTextFieldModo.setEditable(false);
        jTextFieldModo.setForeground(new java.awt.Color(255, 51, 51));
        jTextFieldModo.setText("MODO KERNEL");
        jTextFieldModo.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout jPanelMaquinaLayout = new javax.swing.GroupLayout(jPanelMaquina);
        jPanelMaquina.setLayout(jPanelMaquinaLayout);
        jPanelMaquinaLayout.setHorizontalGroup(
            jPanelMaquinaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelMaquinaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelMaquinaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelAcumulador)
                    .addComponent(jLabelMemoria)
                    .addComponent(jLabelKernel)
                    .addComponent(jLabelPrograma)
                    .addComponent(jLabelModo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelMaquinaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextFieldModo, javax.swing.GroupLayout.DEFAULT_SIZE, 122, Short.MAX_VALUE)
                    .addComponent(jTextFieldProgramaActual)
                    .addComponent(jSpinnerKernel)
                    .addComponent(jTextFieldAcumulador)
                    .addComponent(jSpinnerMemoria))
                .addContainerGap(51, Short.MAX_VALUE))
        );
        jPanelMaquinaLayout.setVerticalGroup(
            jPanelMaquinaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelMaquinaLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanelMaquinaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jTextFieldAcumulador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelAcumulador))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelMaquinaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelMemoria)
                    .addComponent(jSpinnerMemoria, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelMaquinaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelKernel)
                    .addComponent(jSpinnerKernel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelMaquinaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelPrograma)
                    .addComponent(jTextFieldProgramaActual, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelMaquinaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelModo)
                    .addComponent(jTextFieldModo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(12, Short.MAX_VALUE))
        );

        jSpinnerKernel.getAccessibleContext().setAccessibleName("");
        jSpinnerKernel.getAccessibleContext().setAccessibleDescription("");

        jPanelMonitor.setBackground(new java.awt.Color(61, 175, 171));
        jPanelMonitor.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(153, 255, 255), 2, true));

        jLabelMonitor.setText("Monitor");

        jTextAreaMonitor.setEditable(false);
        jTextAreaMonitor.setColumns(20);
        jTextAreaMonitor.setRows(5);
        jScrollPane2.setViewportView(jTextAreaMonitor);

        javax.swing.GroupLayout jPanelMonitorLayout = new javax.swing.GroupLayout(jPanelMonitor);
        jPanelMonitor.setLayout(jPanelMonitorLayout);
        jPanelMonitorLayout.setHorizontalGroup(
            jPanelMonitorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelMonitorLayout.createSequentialGroup()
                .addGap(123, 123, 123)
                .addComponent(jLabelMonitor)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanelMonitorLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 294, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanelMonitorLayout.setVerticalGroup(
            jPanelMonitorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelMonitorLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelMonitor)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanelimpresora.setBackground(new java.awt.Color(21, 242, 183));
        jPanelimpresora.setBorder(new javax.swing.border.MatteBorder(null));

        jLabelImpresora.setText("Impresora");

        jTextAreaImpresora.setColumns(20);
        jTextAreaImpresora.setLineWrap(true);
        jTextAreaImpresora.setRows(5);
        jScrollPaneImpresora.setViewportView(jTextAreaImpresora);

        javax.swing.GroupLayout jPanelimpresoraLayout = new javax.swing.GroupLayout(jPanelimpresora);
        jPanelimpresora.setLayout(jPanelimpresoraLayout);
        jPanelimpresoraLayout.setHorizontalGroup(
            jPanelimpresoraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelimpresoraLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPaneImpresora)
                .addContainerGap())
            .addGroup(jPanelimpresoraLayout.createSequentialGroup()
                .addGap(114, 114, 114)
                .addComponent(jLabelImpresora)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanelimpresoraLayout.setVerticalGroup(
            jPanelimpresoraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelimpresoraLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelImpresora)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPaneImpresora, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(58, Short.MAX_VALUE))
        );

        jButtonEncender.setText("Encender");
        jButtonEncender.setActionCommand("");
        jButtonEncender.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonEncenderMouseClicked(evt);
            }
        });

        jButtonApagar.setText("Apagar");
        jButtonApagar.setEnabled(false);
        jButtonApagar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonApagarMouseClicked(evt);
            }
        });

        jTableMemoria.setAutoCreateRowSorter(true);
        jTableMemoria.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Direcc Memoria", "Contenido"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTableMemoria.setToolTipText("");
        jTableMemoria.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        jTableMemoria.setIntercellSpacing(new java.awt.Dimension(0, 1));
        jScrollPane1.setViewportView(jTableMemoria);

        javax.swing.GroupLayout jPanelPrincipalLayout = new javax.swing.GroupLayout(jPanelPrincipal);
        jPanelPrincipal.setLayout(jPanelPrincipalLayout);
        jPanelPrincipalLayout.setHorizontalGroup(
            jPanelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelPrincipalLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(jPanelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelPrincipalLayout.createSequentialGroup()
                        .addComponent(jButtonEncender, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonApagar))
                    .addComponent(jPanelMaquina, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(140, 140, 140)
                .addGroup(jPanelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanelimpresora, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanelMonitor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 399, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(308, 308, 308))
        );
        jPanelPrincipalLayout.setVerticalGroup(
            jPanelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelPrincipalLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelPrincipalLayout.createSequentialGroup()
                        .addGroup(jPanelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanelMaquina, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanelMonitor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(28, 28, 28)
                        .addGroup(jPanelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jButtonApagar)
                                .addComponent(jButtonEncender))
                            .addComponent(jPanelimpresora, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanelPrincipalLayout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 376, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 261, Short.MAX_VALUE))))
        );

        jMenuBar1.setBackground(new java.awt.Color(26, 173, 116));
        jMenuBar1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jMenuArchivo.setText("Archivo");

        jMenuItemAbrir.setText("Abrir");
        jMenuItemAbrir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemAbrirActionPerformed(evt);
            }
        });
        jMenuArchivo.add(jMenuItemAbrir);

        jMenuBar1.add(jMenuArchivo);

        jMenuSalir.setText("Salir");
        jMenuSalir.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenuSalirMouseClicked(evt);
            }
        });
        jMenuBar1.add(jMenuSalir);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanelPrincipal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItemAbrirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemAbrirActionPerformed
        LeerArchivoCH();
    }//GEN-LAST:event_jMenuItemAbrirActionPerformed

    private void LeerArchivoCH() {

        fileChooser.showOpenDialog(fileChooser);

        DefaultTableModel model = new DefaultTableModel();

        model.addColumn("Direcc Memoria");
        model.addColumn("Contenido");

        jTableMemoria.setModel(model);

        try {
            String ruta = fileChooser.getSelectedFile().getAbsolutePath();
            File f = new File(ruta);
            entrada = new Scanner(f);
            int i = 0;
            while (entrada.hasNext()) {
                model.addRow(new Object[]{i, entrada.nextLine() + "\n"});
                i++;
            }
        } catch (FileNotFoundException e) {
            System.out.println(e.getMessage());
        } catch (NullPointerException e) {
            System.out.println("No se ha seleccionado ningún fichero");
            jTextAreaImpresora.setText("No se ha seleccionado ningún fichero");
        } catch (Exception e) {
            System.out.println(e.getMessage());
        } finally {
            if (entrada != null) {
                entrada.close();
            }
        }
    }

    private void jMenuSalirMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuSalirMouseClicked
        dispose();
    }//GEN-LAST:event_jMenuSalirMouseClicked

    private void jButtonApagarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonApagarMouseClicked
        jTextFieldModo.setText("MODO KERNEL");
        jTextFieldModo.setForeground(Color.red);
        jSpinnerMemoria.setEnabled(true);
        jSpinnerKernel.setEnabled(true);
        jButtonApagar.setEnabled(false);
        jButtonEncender.setEnabled(true);
    }//GEN-LAST:event_jButtonApagarMouseClicked

    private void jButtonEncenderMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonEncenderMouseClicked

        if (jTextFieldModo.getText().equals("MODO KERNEL")) {
            jTextFieldModo.setText("Modo Usuario");
            jSpinnerMemoria.setEnabled(false);
            jSpinnerKernel.setEnabled(false);
            jButtonApagar.setEnabled(true);
            jButtonEncender.setEnabled(false);
            jTextFieldModo.setForeground(Color.blue);
        } else {

        }
    }//GEN-LAST:event_jButtonEncenderMouseClicked

    private void jSpinnerKernelStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinnerKernelStateChanged
        //Guardamos valor del spinner escogido por el usuario
        valorSpinnerKernel = Integer.parseInt(jSpinnerKernel.getValue().toString());
        jTextAreaMonitor.append("Tamaño de kernel escogido: " + valorSpinnerKernel + "\n");
        tamanosMemoriaKerner(valorSpinner, valorSpinnerKernel);
    }//GEN-LAST:event_jSpinnerKernelStateChanged

    private void jSpinnerMemoriaStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinnerMemoriaStateChanged
        //Guardamos valor del spinner escogido por el usuario
        valorSpinnerKernel = Integer.parseInt(jSpinnerKernel.getValue().toString());
        valorSpinner = Integer.parseInt(jSpinnerMemoria.getValue().toString());
        jTextAreaMonitor.append("Tamaño de memoria escogido: " + valorSpinner + "\n");
        tamanosMemoriaKerner(valorSpinner, valorSpinnerKernel);
        DefaultTableModel listModel = new DefaultTableModel();
        listModel.addColumn("Direcc Memoria");
        listModel.addColumn("Contenido");
        for (int i = 0; i < valorSpinner; i++) {

            if (i == 0) {
                listModel.addRow(new Object[]{i, "acumulador"});
                jTableMemoria.setModel(listModel);
            } else if (i <= valorSpinnerKernel) {

                listModel.addRow(new Object[]{i, "Sistema Operativo 2023-2"});
                jTableMemoria.setModel(listModel);
            } else {
                listModel.addRow(new Object[]{i, ""});
                jTableMemoria.setModel(listModel);
            }
            //Asociar el modelo de lista al JList 
            jTableMemoria.setModel(listModel);
        }

    }//GEN-LAST:event_jSpinnerMemoriaStateChanged

    private void tamanosMemoriaKerner(int valorMemoria, int valorKernel) {
        if(valorMemoria<valorKernel)
        {
    JOptionPane.showMessageDialog(null,"Hola");
    }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new principal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonApagar;
    private javax.swing.JButton jButtonEncender;
    private javax.swing.JLabel jLabelAcumulador;
    private javax.swing.JLabel jLabelImpresora;
    private javax.swing.JLabel jLabelKernel;
    private javax.swing.JLabel jLabelMemoria;
    private javax.swing.JLabel jLabelModo;
    private javax.swing.JLabel jLabelMonitor;
    private javax.swing.JLabel jLabelPrograma;
    private javax.swing.JMenu jMenuArchivo;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItemAbrir;
    private javax.swing.JMenu jMenuSalir;
    private javax.swing.JPanel jPanelMaquina;
    private javax.swing.JPanel jPanelMonitor;
    private javax.swing.JPanel jPanelPrincipal;
    private javax.swing.JPanel jPanelimpresora;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPaneImpresora;
    private javax.swing.JSpinner jSpinnerKernel;
    private javax.swing.JSpinner jSpinnerMemoria;
    private javax.swing.JTable jTableMemoria;
    private javax.swing.JTextArea jTextAreaImpresora;
    private javax.swing.JTextArea jTextAreaMonitor;
    private javax.swing.JTextField jTextFieldAcumulador;
    private javax.swing.JTextField jTextFieldModo;
    private javax.swing.JTextField jTextFieldProgramaActual;
    // End of variables declaration//GEN-END:variables
}
